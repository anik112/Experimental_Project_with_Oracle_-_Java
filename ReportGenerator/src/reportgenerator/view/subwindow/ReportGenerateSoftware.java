package reportgenerator.view.subwindow;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Desktop;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.nio.channels.FileChannel;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import reportgenerator.corefunction.IOFunction;
import reportgenerator.corefunction.WriteMonthlyBill;
import reportgenerator.corefunction.WriteMonthlyBillHardCopy;
import reportgenerator.corefunction.WriteQutitoin;
import reportgenerator.corefunction.WriteQutitoinBilHardCopy;
import reportgenerator.corefunction.WriteQutitoinBill;
import reportgenerator.dao.EntrySubmitedBillDao;
import reportgenerator.dao.MonthlyBillComponent;
import reportgenerator.dao.ReqQutComponent;
import reportgenerator.service.EntrySubmitedBillService;
import reportgenerator.view.Confirmation;

/**
 *
 * @author Anik
 */
public class ReportGenerateSoftware extends javax.swing.JPanel {

    private String savingLoc;
    //private String savingLoc = "\\\\192.168.1.210\\monthly_online_bill_and_quotation\\";
    private String configComapnyListUrl;
    private String configPendingBillList;
    private String billNo = "";
    private String recentMonthlyBillFileLoc = "";
    private String recentReqQutFileLoc = "";
    private String recentReqQutBillFileLoc = "";
    private String monthlyBillType = "MONTHLY-BILL";
    private String reqBillType = "SOFT-REQ-BILL";
    private String monthlyBillSavingTeg = "Monthly-Bill";
    private String reqBillSavingTeg = "Requirment-Bill-&-Quotation";
    private String openFolderUrl = "";

    private List<String> companyAndAddressList = new ArrayList<>();
    private List<String> pendingBillList = new ArrayList<>();

    private int keyTypeChecker = 0;

    /**
     * Creates new form ReportGenerate
     */
    public ReportGenerateSoftware(String savingLoc, String configCompanyLoc, String configPanddingLoc) {
        this.savingLoc = savingLoc;
        this.configComapnyListUrl = configCompanyLoc;
        this.configPendingBillList = configPanddingLoc;

        initComponents();
        showCompanyNameInComboBox();
        refPendingBillTable();
        //this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        comboMonth = new javax.swing.JComboBox<>();
        comboYear = new javax.swing.JComboBox<>();
        comboCompany = new javax.swing.JComboBox<>();
        txtDate = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        txtAmount = new javax.swing.JTextField();
        btnGenerate = new javax.swing.JButton();
        btnMonthlyBillOpenFile = new javax.swing.JButton();
        btnMonthlyBillDownload = new javax.swing.JButton();
        checkBoxMonthlyBillHardcopy = new javax.swing.JCheckBox();
        txtAmountInWordMonthlyBill = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        txtReqRow1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        txtReqAmountRow1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtReqRow2 = new javax.swing.JTextField();
        txtReqAmountRow2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtReqRow3 = new javax.swing.JTextField();
        txtReqAmountRow3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtReqRow4 = new javax.swing.JTextField();
        txtReqAmountRow4 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtReqRow5 = new javax.swing.JTextField();
        txtReqAmountRow5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtReqRow6 = new javax.swing.JTextField();
        txtReqAmountRow6 = new javax.swing.JTextField();
        txtReqRow7 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtReqAmountRow7 = new javax.swing.JTextField();
        txtReqRow8 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtReqAmountRow8 = new javax.swing.JTextField();
        txtReqRow9 = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtReqAmountRow9 = new javax.swing.JTextField();
        txtReqRow10 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtReqAmountRow10 = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtReqRow11 = new javax.swing.JTextField();
        txtReqAmountRow11 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtReqRow12 = new javax.swing.JTextField();
        txtReqAmountRow12 = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtReqRow13 = new javax.swing.JTextField();
        txtReqAmountRow13 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtReqRow14 = new javax.swing.JTextField();
        txtReqAmountRow14 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtReqRow15 = new javax.swing.JTextField();
        txtReqAmountRow15 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jPanel4 = new javax.swing.JPanel();
        btnMakeRow = new javax.swing.JButton();
        btnOpenFile = new javax.swing.JButton();
        btnReqBillDownload = new javax.swing.JButton();
        txtAmountInWordRegQut = new javax.swing.JTextField();
        lblShowReqAmount = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        btnMakeReqQtuBill = new javax.swing.JButton();
        btnMakeReqQutBill = new javax.swing.JButton();
        txtReqQutBillNumber = new javax.swing.JTextField();
        btnRequirmentBillDownload = new javax.swing.JButton();
        checkBoxRequirmentBillHardcopy = new javax.swing.JCheckBox();
        txtAmountInWordReqBill = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBillPendingList = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 224));
        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel1.setBackground(new java.awt.Color(255, 255, 224));

        comboMonth.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        comboMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December" }));
        comboMonth.setToolTipText("");

        comboYear.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        comboYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022", "2023", "2024", "2025" }));
        comboYear.setToolTipText("");

        comboCompany.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        comboCompany.setMaximumRowCount(100);
        comboCompany.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Company Name" }));
        comboCompany.setToolTipText("");

        txtDate.setBackground(new java.awt.Color(0, 255, 255));
        txtDate.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtDate.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Date", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 12))); // NOI18N
        txtDate.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDateFocusGained(evt);
            }
        });
        txtDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDateKeyPressed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(255, 255, 224));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Monthly Bill Generate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 12))); // NOI18N

        txtAmount.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 12))); // NOI18N
        txtAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAmountActionPerformed(evt);
            }
        });

        btnGenerate.setText("Generate");
        btnGenerate.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateActionPerformed(evt);
            }
        });

        btnMonthlyBillOpenFile.setText("Open File");
        btnMonthlyBillOpenFile.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnMonthlyBillOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlyBillOpenFileActionPerformed(evt);
            }
        });

        btnMonthlyBillDownload.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnMonthlyBillDownload.setText("Download");
        btnMonthlyBillDownload.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnMonthlyBillDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMonthlyBillDownloadActionPerformed(evt);
            }
        });

        checkBoxMonthlyBillHardcopy.setBackground(new java.awt.Color(255, 255, 224));
        checkBoxMonthlyBillHardcopy.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        checkBoxMonthlyBillHardcopy.setText("Hard Copy");
        checkBoxMonthlyBillHardcopy.setAutoscrolls(true);
        checkBoxMonthlyBillHardcopy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkBoxMonthlyBillHardcopy.setBorderPainted(true);
        checkBoxMonthlyBillHardcopy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        txtAmountInWordMonthlyBill.setEditable(false);
        txtAmountInWordMonthlyBill.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtAmountInWordMonthlyBill.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Amount in word", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 10))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(checkBoxMonthlyBillHardcopy, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnGenerate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(txtAmountInWordMonthlyBill))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnMonthlyBillOpenFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMonthlyBillDownload, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(btnMonthlyBillDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnGenerate, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(checkBoxMonthlyBillHardcopy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtAmountInWordMonthlyBill)
                            .addComponent(btnMonthlyBillOpenFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jScrollPane1.setBackground(new java.awt.Color(255, 255, 224));
        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "No-Detls   --------------------------------------------------   Amount", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 12))); // NOI18N
        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPanel3.setBackground(new java.awt.Color(255, 255, 224));

        txtReqRow1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel1.setText("01");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqAmountRow1.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel2.setText("02");
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow2.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow2.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel3.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel3.setText("03");
        jLabel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow3.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow3.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel4.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel4.setText("04");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow4.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow4.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel5.setText("05");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow5.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow5.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel6.setText("06");
        jLabel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow6.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow6.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqRow7.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel7.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel7.setText("07");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqAmountRow7.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqRow8.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel8.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel8.setText("08");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqAmountRow8.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtReqAmountRow8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtReqAmountRow8ActionPerformed(evt);
            }
        });

        txtReqRow9.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel10.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel10.setText("09");
        jLabel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqAmountRow9.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqRow10.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel11.setText("10");
        jLabel11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqAmountRow10.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel12.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel12.setText("11");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow11.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow11.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel13.setText("12");
        jLabel13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow12.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow12.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel14.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel14.setText("13");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow13.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow13.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel15.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel15.setText("14");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow14.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow14.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        jLabel16.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel16.setText("15");
        jLabel16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        txtReqRow15.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        txtReqAmountRow15.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel16)
                    .addComponent(jLabel15)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtReqRow1, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow3, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow4, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow6, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow5, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow7, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow8, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow9, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow10, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow11, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow12, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow13, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow14, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqRow15, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(txtReqAmountRow1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtReqAmountRow15, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtReqAmountRow2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow9, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow11, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow12, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow13, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtReqAmountRow14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtReqRow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtReqRow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtReqRow3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtReqRow4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtReqRow5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtReqRow6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtReqRow7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtReqRow8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtReqRow9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtReqRow10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtReqRow11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtReqRow12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow12, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtReqRow13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtReqRow14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtReqRow15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtReqAmountRow15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel3);

        jLabel9.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Make Rquirment Qutitotin & Bill");
        jLabel9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jPanel4.setBackground(new java.awt.Color(255, 255, 224));
        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Make Requirment Qutitoin", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 12))); // NOI18N

        btnMakeRow.setText("Make");
        btnMakeRow.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnMakeRow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeRowActionPerformed(evt);
            }
        });

        btnOpenFile.setText("Open File");
        btnOpenFile.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnOpenFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenFileActionPerformed(evt);
            }
        });

        btnReqBillDownload.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnReqBillDownload.setText("Download");
        btnReqBillDownload.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnReqBillDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqBillDownloadActionPerformed(evt);
            }
        });

        txtAmountInWordRegQut.setEditable(false);
        txtAmountInWordRegQut.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtAmountInWordRegQut.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Amount in word", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 10))); // NOI18N

        lblShowReqAmount.setFont(new java.awt.Font("Lucida Sans", 0, 8)); // NOI18N
        lblShowReqAmount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblShowReqAmount.setText("0");
        lblShowReqAmount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.lightGray, java.awt.Color.white, java.awt.Color.gray, java.awt.Color.white));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addComponent(lblShowReqAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAmountInWordRegQut, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnMakeRow, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnOpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnReqBillDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnMakeRow, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOpenFile, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReqBillDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblShowReqAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtAmountInWordRegQut, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel5.setBackground(new java.awt.Color(255, 255, 224));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Make Requirment Bill", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 12))); // NOI18N

        btnMakeReqQtuBill.setText("Open File");
        btnMakeReqQtuBill.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnMakeReqQtuBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeReqQtuBillActionPerformed(evt);
            }
        });

        btnMakeReqQutBill.setText("Make");
        btnMakeReqQutBill.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnMakeReqQutBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeReqQutBillActionPerformed(evt);
            }
        });

        txtReqQutBillNumber.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtReqQutBillNumber.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Bill Number", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 12))); // NOI18N

        btnRequirmentBillDownload.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        btnRequirmentBillDownload.setText("Download");
        btnRequirmentBillDownload.setBorder(javax.swing.BorderFactory.createEtchedBorder(java.awt.Color.white, java.awt.Color.lightGray));
        btnRequirmentBillDownload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequirmentBillDownloadActionPerformed(evt);
            }
        });

        checkBoxRequirmentBillHardcopy.setBackground(new java.awt.Color(255, 255, 224));
        checkBoxRequirmentBillHardcopy.setFont(new java.awt.Font("Lucida Sans", 1, 12)); // NOI18N
        checkBoxRequirmentBillHardcopy.setText("Hard Copy");
        checkBoxRequirmentBillHardcopy.setAutoscrolls(true);
        checkBoxRequirmentBillHardcopy.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        checkBoxRequirmentBillHardcopy.setBorderPainted(true);
        checkBoxRequirmentBillHardcopy.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        txtAmountInWordReqBill.setEditable(false);
        txtAmountInWordReqBill.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        txtAmountInWordReqBill.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Amount in word", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Lucida Sans", 0, 10))); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtReqQutBillNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAmountInWordReqBill, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(checkBoxRequirmentBillHardcopy, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnMakeReqQutBill, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRequirmentBillDownload, javax.swing.GroupLayout.DEFAULT_SIZE, 107, Short.MAX_VALUE)
                    .addComponent(btnMakeReqQtuBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRequirmentBillDownload, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnMakeReqQutBill, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxRequirmentBillHardcopy, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnMakeReqQtuBill, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(txtAmountInWordReqBill, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(txtReqQutBillNumber)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboCompany, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(comboMonth, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDate, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboYear, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 4, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboCompany, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel9)
                        .addGap(4, 4, 4)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        tblBillPendingList.setFont(new java.awt.Font("Lucida Sans", 0, 12)); // NOI18N
        tblBillPendingList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bill Pending List"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBillPendingList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblBillPendingListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblBillPendingList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator3)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtDateFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDateFocusGained
        // TODO add your handling code here:
        txtDate.setText("");
        keyTypeChecker = 0;
    }//GEN-LAST:event_txtDateFocusGained

    private void txtDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDateKeyPressed
        // TODO add your handling code here:

        if (keyTypeChecker == 8) {
            String date = txtDate.getText();
            String day = date.substring(0, 2);
            String month = date.substring(2, 4);
            String year = date.substring(4, 8);

            billNo = month + year;
            System.out.println(day + "/" + month + "/" + year);
            txtDate.setText(day + "/" + month + "/" + year);
            txtAmount.requestFocus();
        }
        keyTypeChecker++;
    }//GEN-LAST:event_txtDateKeyPressed

    private void txtAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAmountActionPerformed

    private void btnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateActionPerformed

        EntrySubmitedBillDao billDao = new EntrySubmitedBillDao();

        PrintWriter pw = null;
        if ((txtDate.getText().length() > 9) && (comboCompany.getSelectedIndex() > 0)) {
            try {
                // TODO add your handling code here:
                String parts[] = comboCompany.getSelectedItem().toString().split("-");

                String companyName = parts[1];
                companyName = companyName.replace(' ', '-');
                companyName = companyName.replace(".", "");

                //String url = savingLoc + companyName + "\\" + companyName + "-" + billNo + ".pdf";
                MonthlyBillComponent component = new MonthlyBillComponent();
                component.setMonth(comboMonth.getSelectedItem().toString());
                component.setYear(comboYear.getSelectedItem().toString());
                component.setCompanyName(parts[1]);
                component.setAddress(companyAndAddressList.get(Integer.parseInt(parts[0]) + 1));
                component.setAmount(Integer.parseInt(txtAmount.getText()));
                component.setDate(txtDate.getText());
                component.setBillNo(billNo);

                // set bill information for update
                billDao.setBillDate(txtDate.getText());
                billDao.setBillNumber(billNo);
                billDao.setCompanyName(parts[1]);
                billDao.setAmount(Float.valueOf(txtAmount.getText()));
                billDao.setBillType(monthlyBillType);
                String url = savingLoc + monthlyBillSavingTeg + "\\" + companyName + "\\";
                openFolderUrl = url;

                if ((!checkBoxMonthlyBillHardcopy.isSelected())) {

                    url += companyName + "-soft-copy-" + billNo + ".pdf";
                    recentMonthlyBillFileLoc = url;
                    File selectedFile = new File(url);

                    if (new WriteMonthlyBill().writeMonthlyBillInPdfFile(component, selectedFile)) {
                        new IOFunction().writeBillNumber(billNo, companyName, configPendingBillList);
                        refPendingBillTable();
                        if (new EntrySubmitedBillService().checkBillNumberAllreadyEntry(billNo, parts[1])) {
                            new EntrySubmitedBillService().saveData(billDao);
                        }
                        System.out.println("File is generate");
                        JOptionPane.showMessageDialog(null, "File Is Generated.",
                                ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Monthly Bill Isn't Generated.",
                                ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
                    }
                } else {
                    url += companyName + "-hard-copy" + billNo + ".pdf";
                    recentMonthlyBillFileLoc = url;
                    File selectedFile = new File(url);

                    if (new WriteMonthlyBillHardCopy().writeMonthlyBillInPdfFile(component, selectedFile)) {
                        new IOFunction().writeBillNumber(billNo, companyName, configPendingBillList);
                        refPendingBillTable();
                        if (new EntrySubmitedBillService().checkBillNumberAllreadyEntry(billNo, parts[1])) {
                            new EntrySubmitedBillService().saveData(billDao);
                        }
                        System.out.println("File is generate");
                        JOptionPane.showMessageDialog(null, "File Is Generated.",
                                ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Monthly Bill Isn't Generated.",
                                ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
                    }
                }

            } catch (Exception ex) {
                Logger.getLogger(ReportGenerateSoftware.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, ex.getMessage(),
                        ":: Error-01 :: ", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Select Company, Month, Year, Date",
                    ":: Please Select :: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGenerateActionPerformed

    private void btnMonthlyBillOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlyBillOpenFileActionPerformed
        // TODO add your handling code here:
        // open file in explorer
        try {
            if (!recentMonthlyBillFileLoc.isEmpty()) {
                File file = new File(recentMonthlyBillFileLoc);
                Desktop desktop = Desktop.getDesktop();
                desktop.open(file);
                recentMonthlyBillFileLoc = "";
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    ":: Error-03 :: ", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnMonthlyBillOpenFileActionPerformed

    private void btnMonthlyBillDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMonthlyBillDownloadActionPerformed
        // TODO add your handling code here:

        try {
            if (!savingLoc.isEmpty()) {
//                File file = new File(openFolderUrl);
//                Desktop desktop = Desktop.getDesktop();
//                desktop.open(file);
                // copy file in local D:/ drive by File channel
                File srcFile = new File(recentMonthlyBillFileLoc);
                File distFile = new File("D:\\" + srcFile.getName());
                FileChannel srcChannel = new FileInputStream(srcFile).getChannel();
                FileChannel distChannel = new FileOutputStream(distFile).getChannel();

                distChannel.transferFrom(srcChannel, 0, srcChannel.size());
                srcChannel.close();
                distChannel.close();
                
                JOptionPane.showMessageDialog(null, "File Download in "+srcFile.getAbsolutePath(),
                    ":: Download :: ", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    ":: Error-12 :: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnMonthlyBillDownloadActionPerformed

    private void txtReqAmountRow8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtReqAmountRow8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtReqAmountRow8ActionPerformed

    private void btnMakeRowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeRowActionPerformed
        // TODO add your handling code here:

        if ((txtDate.getText().length() > 9) && (comboCompany.getSelectedIndex() > 0)) {
            // split company name and address
            // replace string , replace space to '-' charecter
            String parts[] = comboCompany.getSelectedItem().toString().split("-");
            parts[1] = parts[1].replace(' ', '-');
            parts[1] = parts[1].replace(".", "");
            String url = savingLoc + reqBillSavingTeg + "\\" + parts[1] + "\\";
            openFolderUrl = url;
            url += parts[1] + "-Req-Qtnt-" + System.currentTimeMillis() + ".pdf";

            recentReqQutFileLoc = url;

            File selectedFile = new File(url);

            if (new WriteQutitoin().writeReqQtInPdfFile(setReqDataInArray(), selectedFile)) {
                System.out.println("Qutation make --> ");
                JOptionPane.showMessageDialog(null, "Qutation Is Generated.",
                        ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Qutation Isn't Generated.",
                        ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Select Company, Month, Year, Date",
                    ":: Please Select :: ", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnMakeRowActionPerformed

    private void btnOpenFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenFileActionPerformed
        // TODO add your handling code here:
        // open file in file explorer
        try {
            if (!recentReqQutFileLoc.isEmpty()) {
                File file = new File(recentReqQutFileLoc);
                Desktop desktop = Desktop.getDesktop();
                desktop.open(file);
                recentReqQutFileLoc = "";
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    ":: Error-02 :: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnOpenFileActionPerformed

    private void btnReqBillDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqBillDownloadActionPerformed
        // TODO add your handling code here:
        try {
            if (!recentReqQutFileLoc.isEmpty()) {
//                File file = new File(openFolderUrl);
//                Desktop desktop = Desktop.getDesktop();
//                desktop.open(file);

                // copy file in local D:/ drive by File channel
                File srcFile = new File(recentReqQutFileLoc);
                File distFile = new File("D:\\" + srcFile.getName());
                FileChannel srcChannel = new FileInputStream(srcFile).getChannel();
                FileChannel distChannel = new FileOutputStream(distFile).getChannel();

                distChannel.transferFrom(srcChannel, 0, srcChannel.size());
                srcChannel.close();
                distChannel.close();
                
                JOptionPane.showMessageDialog(null, "File Download in "+srcFile.getAbsolutePath(),
                    ":: Download :: ", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    ":: Error-02 :: ", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnReqBillDownloadActionPerformed

    private void btnMakeReqQtuBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeReqQtuBillActionPerformed
        // TODO add your handling code here:
        try {
            if (!recentReqQutBillFileLoc.isEmpty()) {
                File file = new File(recentReqQutBillFileLoc);
                Desktop desktop = Desktop.getDesktop();
                desktop.open(file);
                recentReqQutBillFileLoc = "";
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    ":: Error-04 :: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnMakeReqQtuBillActionPerformed

    private void btnMakeReqQutBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeReqQutBillActionPerformed
        // TODO add your handling code here:
        EntrySubmitedBillDao billDao = new EntrySubmitedBillDao();

        if ((txtDate.getText().length() > 9) && (comboCompany.getSelectedIndex() > 0)) {
            // split company name and address
            // replace string , replace space to '-' charecter
            String parts[] = comboCompany.getSelectedItem().toString().split("-");
            String companyName = parts[1];
            companyName = companyName.replace(' ', '-');
            companyName = companyName.replace(".", "");
            String url = savingLoc + reqBillSavingTeg + "\\" + companyName + "\\";
            openFolderUrl = url;

            if (!checkBoxRequirmentBillHardcopy.isSelected()) {
                url += companyName + "-Req-Qtnt-Bill-soft-copy" + System.currentTimeMillis() + ".pdf";
                recentReqQutBillFileLoc = url;
                File selectedFile = new File(url);

                WriteQutitoinBill qutitoinBill = new WriteQutitoinBill();
                if (qutitoinBill.writeReqQtBillInPdfFile(setReqDataInArray(), txtReqQutBillNumber.getText(), selectedFile)) {
                    new IOFunction().writeBillNumber(txtReqQutBillNumber.getText(), parts[1], configPendingBillList);

                    // set bill information for update
                    billDao.setBillDate(txtDate.getText());
                    billDao.setBillNumber(txtReqQutBillNumber.getText());
                    billDao.setCompanyName(companyName);
                    billDao.setAmount(qutitoinBill.getTotalamount());
                    billDao.setBillType(reqBillType);

                    refPendingBillTable();
                    if (new EntrySubmitedBillService().checkBillNumberAllreadyEntry(txtReqQutBillNumber.getText(), parts[1])) {
                        new EntrySubmitedBillService().saveData(billDao);
                    }
                    System.out.println("Qutation Bill make --> ");
                    JOptionPane.showMessageDialog(null, "Qutation Bill Is Generated.",
                            ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Qutation Bill Isn't Generated.",
                            ":: Success :: ", JOptionPane.ERROR_MESSAGE);
                }

            } else {
                url += companyName + "-Req-Qtnt-Bill-hard-copy" + System.currentTimeMillis() + ".pdf";
                recentReqQutBillFileLoc = url;
                File selectedFile = new File(url);

                WriteQutitoinBilHardCopy qutitoinBilHardCopy = new WriteQutitoinBilHardCopy();
                if (qutitoinBilHardCopy.writeReqQtBillInPdfFile(setReqDataInArray(), txtReqQutBillNumber.getText(), selectedFile)) {
                    new IOFunction().writeBillNumber(txtReqQutBillNumber.getText(), parts[1], configPendingBillList);

                    // set bill information for update
                    billDao.setBillDate(txtDate.getText());
                    billDao.setBillNumber(txtReqQutBillNumber.getText());
                    billDao.setCompanyName(parts[1]);
                    billDao.setAmount(qutitoinBilHardCopy.getTotalamount());
                    billDao.setBillType(reqBillType);

                    refPendingBillTable();
                    if (new EntrySubmitedBillService().checkBillNumberAllreadyEntry(txtReqQutBillNumber.getText(), parts[1])) {
                        new EntrySubmitedBillService().saveData(billDao);
                    }
                    System.out.println("Qutation Bill make --> ");
                    JOptionPane.showMessageDialog(null, "Qutation Bill Is Generated.",
                            ":: Success :: ", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Qutation Bill Isn't Generated.",
                            ":: Success :: ", JOptionPane.ERROR_MESSAGE);
                }
            }

        } else {
            JOptionPane.showMessageDialog(null, "Select Company, Month, Year, Date",
                    ":: Please Select :: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnMakeReqQutBillActionPerformed

    private void btnRequirmentBillDownloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequirmentBillDownloadActionPerformed
        // TODO add your handling code here:
        try {
            if (!savingLoc.isEmpty()) {
//                File file = new File(openFolderUrl);
//                Desktop desktop = Desktop.getDesktop();
//                desktop.open(file);

                // copy file in local D:/ drive by File channel
                File srcFile = new File(recentReqQutBillFileLoc);
                File distFile = new File("D:\\" + srcFile.getName());
                FileChannel srcChannel = new FileInputStream(srcFile).getChannel();
                FileChannel distChannel = new FileOutputStream(distFile).getChannel();

                distChannel.transferFrom(srcChannel, 0, srcChannel.size());
                srcChannel.close();
                distChannel.close();
                
                JOptionPane.showMessageDialog(null, "File Download in "+srcFile.getAbsolutePath(),
                    ":: Download :: ", JOptionPane.INFORMATION_MESSAGE);

            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(null, e.getMessage(),
                    ":: Error-13 :: ", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRequirmentBillDownloadActionPerformed

    private void tblBillPendingListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblBillPendingListMouseClicked

        Confirmation confirmation = new Confirmation(billNo, configPendingBillList, pendingBillList, pendingBillList.get(tblBillPendingList.getSelectedRow()));
        confirmation.setVisible(true);

        refPendingBillTable();
    }//GEN-LAST:event_tblBillPendingListMouseClicked

    private void showCompanyNameInComboBox() {
        companyAndAddressList = new IOFunction().getCompanyNameAndAddress(configComapnyListUrl);

        int i = 0;
        while (i != companyAndAddressList.size()) {
            comboCompany.addItem(i + "-" + companyAndAddressList.get(i));
            i += 2;
        }
    }

    private void showPendingBillList() {
        pendingBillList = new IOFunction().getBillPendingList(configPendingBillList);

        DefaultTableModel model = (DefaultTableModel) tblBillPendingList.getModel();
        Object[] obj = new Object[1];
        int i = 0;
        while (i != pendingBillList.size()) {
            obj[0] = pendingBillList.get(i);
            model.addRow(obj);
            i++;
        }
    }

    private void refPendingBillTable() {
        DefaultTableModel model = (DefaultTableModel) tblBillPendingList.getModel();
        model.setRowCount(0);
        showPendingBillList();
    }

    private List<ReqQutComponent> setReqDataInArray() {

        List<ReqQutComponent> components = new ArrayList<>();
        // Devided company name and address, using '-' charcater
        // using split() function
        String parts[] = comboCompany.getSelectedItem().toString().split("-");
        String amount = " ";

        // Add information in list
        ReqQutComponent component1 = new ReqQutComponent();
        component1.setDate(txtDate.getText());
        component1.setMonth(comboMonth.getSelectedItem().toString());
        component1.setYear(comboYear.getSelectedItem().toString());
        component1.setCompanyName(parts[1]);
        component1.setAddress(companyAndAddressList.get(Integer.parseInt(parts[0]) + 1));
        component1.setBodyContent(txtReqRow1.getText());
        amount = txtReqAmountRow1.getText();
        component1.setAmount(amount);
        components.add(component1);
//        
//        if (!txtReqRow1.getText().isEmpty()) {
//            components.add(component1);
//        }

        ReqQutComponent component2 = new ReqQutComponent();
        component2.setBodyContent(txtReqRow2.getText());
        amount = txtReqAmountRow2.getText();
        component2.setAmount(amount);
        components.add(component2);
//         
//        if (!txtReqRow2.getText().isEmpty()) {
//            components.add(component2);
//        }

        ReqQutComponent component3 = new ReqQutComponent();
        component3.setBodyContent(txtReqRow3.getText());
        amount = txtReqAmountRow3.getText();
        component3.setAmount(amount);
        components.add(component3);
//        
//        if (!txtReqRow3.getText().isEmpty()) {
//            components.add(component3);
//        }

        ReqQutComponent component4 = new ReqQutComponent();
        component4.setBodyContent(txtReqRow4.getText());
        amount = txtReqAmountRow4.getText();
        component4.setAmount(amount);
        components.add(component4);
//         
//        if (!txtReqRow4.getText().isEmpty()) {
//            components.add(component4);
//        }

        ReqQutComponent component5 = new ReqQutComponent();
        component5.setBodyContent(txtReqRow5.getText());
        amount = txtReqAmountRow5.getText();
        component5.setAmount(amount);
        components.add(component5);
//        
//        if (!txtReqRow5.getText().isEmpty()) {
//            components.add(component5);
//        }

        ReqQutComponent component6 = new ReqQutComponent();
        component6.setBodyContent(txtReqRow6.getText());
        amount = txtReqAmountRow6.getText();
        component6.setAmount(amount);
        components.add(component6);

//        if (!txtReqRow6.getText().isEmpty()) {
//            components.add(component6);
//        }
        ReqQutComponent component7 = new ReqQutComponent();
        component7.setBodyContent(txtReqRow7.getText());
        amount = txtReqAmountRow7.getText();
        component7.setAmount(amount);
        components.add(component7);
//        if (!txtReqRow7.getText().isEmpty()) {
//            components.add(component7);
//        }

        ReqQutComponent component8 = new ReqQutComponent();
        component8.setBodyContent(txtReqRow8.getText());
        amount = txtReqAmountRow8.getText();
        component8.setAmount(amount);
        components.add(component8);
//        if (!txtReqRow8.getText().isEmpty()) {
//            components.add(component8);
//        }

        ReqQutComponent component9 = new ReqQutComponent();
        component9.setBodyContent(txtReqRow9.getText());
        amount = txtReqAmountRow9.getText();
        component9.setAmount(amount);
        components.add(component9);
//        if (!txtReqRow9.getText().isEmpty()) {
//            components.add(component9);
//        }

        ReqQutComponent component10 = new ReqQutComponent();
        component10.setBodyContent(txtReqRow10.getText());
        amount = txtReqAmountRow10.getText();
        component10.setAmount(amount);
        components.add(component10);
//        if (!txtReqRow10.getText().isEmpty()) {
//            components.add(component10);
//        }

        ReqQutComponent component11 = new ReqQutComponent();
        component11.setBodyContent(txtReqRow10.getText());
        amount = txtReqAmountRow11.getText();
        component11.setAmount(amount);
        components.add(component11);
//        if (!txtReqRow11.getText().isEmpty()) {
//           
//        }

        ReqQutComponent component12 = new ReqQutComponent();
        component12.setBodyContent(txtReqRow12.getText());
        amount = txtReqAmountRow10.getText();
        component12.setAmount(amount);
        components.add(component12);
//        if (!txtReqRow12.getText().isEmpty()) {
//            components.add(component13);
//        }

        return components;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnGenerate;
    private javax.swing.JButton btnMakeReqQtuBill;
    private javax.swing.JButton btnMakeReqQutBill;
    private javax.swing.JButton btnMakeRow;
    private javax.swing.JButton btnMonthlyBillDownload;
    private javax.swing.JButton btnMonthlyBillOpenFile;
    private javax.swing.JButton btnOpenFile;
    private javax.swing.JButton btnReqBillDownload;
    private javax.swing.JButton btnRequirmentBillDownload;
    private javax.swing.JCheckBox checkBoxMonthlyBillHardcopy;
    private javax.swing.JCheckBox checkBoxRequirmentBillHardcopy;
    private javax.swing.JComboBox<String> comboCompany;
    private javax.swing.JComboBox<String> comboMonth;
    private javax.swing.JComboBox<String> comboYear;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JLabel lblShowReqAmount;
    private javax.swing.JTable tblBillPendingList;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtAmountInWordMonthlyBill;
    private javax.swing.JTextField txtAmountInWordRegQut;
    private javax.swing.JTextField txtAmountInWordReqBill;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtReqAmountRow1;
    private javax.swing.JTextField txtReqAmountRow10;
    private javax.swing.JTextField txtReqAmountRow11;
    private javax.swing.JTextField txtReqAmountRow12;
    private javax.swing.JTextField txtReqAmountRow13;
    private javax.swing.JTextField txtReqAmountRow14;
    private javax.swing.JTextField txtReqAmountRow15;
    private javax.swing.JTextField txtReqAmountRow2;
    private javax.swing.JTextField txtReqAmountRow3;
    private javax.swing.JTextField txtReqAmountRow4;
    private javax.swing.JTextField txtReqAmountRow5;
    private javax.swing.JTextField txtReqAmountRow6;
    private javax.swing.JTextField txtReqAmountRow7;
    private javax.swing.JTextField txtReqAmountRow8;
    private javax.swing.JTextField txtReqAmountRow9;
    private javax.swing.JTextField txtReqQutBillNumber;
    private javax.swing.JTextField txtReqRow1;
    private javax.swing.JTextField txtReqRow10;
    private javax.swing.JTextField txtReqRow11;
    private javax.swing.JTextField txtReqRow12;
    private javax.swing.JTextField txtReqRow13;
    private javax.swing.JTextField txtReqRow14;
    private javax.swing.JTextField txtReqRow15;
    private javax.swing.JTextField txtReqRow2;
    private javax.swing.JTextField txtReqRow3;
    private javax.swing.JTextField txtReqRow4;
    private javax.swing.JTextField txtReqRow5;
    private javax.swing.JTextField txtReqRow6;
    private javax.swing.JTextField txtReqRow7;
    private javax.swing.JTextField txtReqRow8;
    private javax.swing.JTextField txtReqRow9;
    // End of variables declaration//GEN-END:variables
}
