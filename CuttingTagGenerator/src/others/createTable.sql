/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 * Author:  VSI-ANIK
 * Created: Mar 9, 2020
 */

-- CRETAE BUYER INFORMATION
CREATE TABLE TB_BUYER_INFO
(
  SERIAL_NO             NUMBER,
  BUYER_NAME            VARCHAR2(250 BYTE)
);

CREATE SEQUENCE SEQ_BUYER_SERIAL_NO;

CREATE OR REPLACE TRIGGER TRG_BUYER_SERIAL_NO
BEFORE INSERT ON TB_BUYER_INFO
FOR EACH ROW
BEGIN
    SELECT SEQ_BUYER_SERIAL_NO.NEXTVAL
    INTO :NEW.SERIAL_NO
    FROM DUAL;
END;
/

-- CREATE STYLE INFORMATION

CREATE TABLE TB_STYLE_INFO
(
  SERIAL_NO             NUMBER,
  STYLE_NAME            VARCHAR2(250 BYTE)
);

CREATE SEQUENCE SEQ_STYLE_SERIAL_NO;

CREATE OR REPLACE TRIGGER TRG_STYLE_SERIAL_NO
BEFORE INSERT ON TB_STYLE_INFO
FOR EACH ROW
BEGIN
    SELECT SEQ_STYLE_SERIAL_NO.NEXTVAL
    INTO :NEW.SERIAL_NO
    FROM DUAL;
END;
/

-- CREATE PARTS INFORMATION

CREATE TABLE TB_PARTS_INFO
(
  SERIAL_NO             NUMBER,
  PARTS_NAME            VARCHAR2(250 BYTE)
);

CREATE SEQUENCE SEQ_PARTS_SERIAL_NO;

CREATE OR REPLACE TRIGGER TRG_PARTS_SERIAL_NO
BEFORE INSERT ON TB_PARTS_INFO
FOR EACH ROW
BEGIN
    SELECT SEQ_PARTS_SERIAL_NO.NEXTVAL
    INTO :NEW.SERIAL_NO
    FROM DUAL;
END;
/


-- CREATE PARTS PIVOT TABLE

CREATE TABLE TB_PARTS_PIVOT
(
  PI_NO		 			NUMBER,
  STYLE_NAME            VARCHAR2(250 BYTE),
  PARTS_NAME			VARCHAR2(250 BYTE)
);

CREATE SEQUENCE SEQ_PIVOT_PI_NO;

CREATE OR REPLACE TRIGGER TRG_PIVOT_PI_NO
BEFORE INSERT ON TB_PARTS_PIVOT
FOR EACH ROW
BEGIN
    SELECT SEQ_PIVOT_PI_NO.NEXTVAL
    INTO :NEW.PI_NO
    FROM DUAL;
END;
/

-- CRETAE PURCHASE ORDER

CREATE TABLE TB_PURCHASE_ORDER
(
  BID   		 			  NUMBER,
  BUYER_NAME				  VARCHAR2(250 BYTE),
  STYLE_NAME				  VARCHAR2(250 BYTE),
  PO_NUMBER					  VARCHAR2(250 BYTE),
  FACTORY_NAME				  VARCHAR2(250 BYTE),
  FIRST_CUTTING_DATE		  DATE,
  FABRIC_AMOUNT				  NUMBER,
  ISSUE_DATE				  DATE,
  CARGO_RECIVE_DATE			  DATE,
  CONSTRAINT PURCHASE_PK PRIMARY KEY (BID)
);

CREATE SEQUENCE SEQ_PURCHASE_BID;

CREATE OR REPLACE TRIGGER TRG_PURCHASE_BID
BEFORE INSERT ON TB_PURCHASE_ORDER
FOR EACH ROW
BEGIN
    SELECT SEQ_PURCHASE_BID.NEXTVAL
    INTO :NEW.BID
    FROM DUAL;
END;
/

-- CREATE MARKER PLAN

CREATE TABLE TB_MARKER_PLAN
(
  MID   		 			  NUMBER,
  STYLE_NAME				  VARCHAR2(250 BYTE),
  PO_NUMBER					  VARCHAR2(250 BYTE),
  STD_PLYHEIGHT				  NUMBER,
  TB_LENGTH					  NUMBER,
  YY						  NUMBER,
  XXS						  NUMBER,
  XS						  NUMBER,
  S							  NUMBER,
  M							  NUMBER,
  L							  NUMBER,
  XL						  NUMBER,
  XXL						  NUMBER,
  TOTAL						  NUMBER,
  CONSTRAINT MARKER_PK PRIMARY KEY (MID)
);

CREATE SEQUENCE SEQ_MARKER_MID;

CREATE OR REPLACE TRIGGER TRG_MARKER_MID
BEFORE INSERT ON TB_MARKER_PLAN
FOR EACH ROW
BEGIN
    SELECT SEQ_MARKER_MID.NEXTVAL
    INTO :NEW.MID
    FROM DUAL;
END;
/

-- CREATE BUNDLES PLAN

CREATE TABLE TB_BUNDLES_PLAN
(
  BNID   		 			  NUMBER,
  STYLE_NAME				  VARCHAR2(250 BYTE),
  PO_NUMBER					  VARCHAR2(250 BYTE),
  CUTTING_NUMBER			  NUMBER,
  ROLL_NO					  VARCHAR2(250 BYTE),
  LAYS						  NUMBER,
  B_SIZE					  NUMBER,
  DBL						  NUMBER,
  PARTS						  VARCHAR2(250 BYTE),
  SERIAL_TO					  NUMBER,
  SERIAL_FROM				  NUMBER,
  QTY						  NUMBER,
  CONSTRAINT BUNDLES_PK PRIMARY KEY (BNID)
);

CREATE SEQUENCE SEQ_BUNDLES_BNID;

CREATE OR REPLACE TRIGGER TRG_BUNDLES_BNID
BEFORE INSERT ON TB_BUNDLES_PLAN
FOR EACH ROW
BEGIN
    SELECT SEQ_BUNDLES_BNID.NEXTVAL
    INTO :NEW.BNID
    FROM DUAL;
END;
/